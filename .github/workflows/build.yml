name: build-pyplasm
on: [push] 

env:
  PYPI_USERNAME: __token__
  PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
  ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}

jobs:

  # //////////////////////////////////////////////////////////
  # cpython

  cpython-windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false  
      matrix:
        python-version: [ '3.7', '3.8', '3.9' , '3.10', '3.11' ]
    steps:
    - name: git clone pyplasm
      uses: actions/checkout@v2    
    - name: install cpython
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Compile (cpython)
      shell: bash
      run: |
           set -ex
           export PYTHON_VERSION=${{ matrix.python-version }}
           export GIT_TAG=`git describe --tags --exact-match 2>/dev/null || true`
           source ./resources/scripts/cpython.windows.sh

  # this is producing an universal2 wheel (i.e. arm64 and x86_64)
  cpython-macos:
    runs-on: macos-11
    strategy:
      fail-fast: false  
      matrix:
        python-version: [ '3.7', '3.8', '3.9' , '3.10',  '3.11' ]
    steps:
    - name: git clone pyplasm
      uses: actions/checkout@v2
    - name: install cpython
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Compile (cpython)
      shell: bash
      run: |
           set -ex
           export PYTHON_VERSION=${{ matrix.python-version }}
           export GIT_TAG=`git describe --tags --exact-match 2>/dev/null || true`
           source ./resources/scripts/cpython.macos.sh
            
  cpython-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  
      matrix:
        python-version: [  '3.6', '3.7', '3.8', '3.9', '3.10' ] # 3.11 is disabled since I don't have it in docker
    steps:
    - name: git clone pyplasm
      uses: actions/checkout@v2
    - name: Compile cpython
      shell: bash
      run: |
          set -ex 
          export PYTHON_VERSION=${{ matrix.python-version }}
          export GIT_TAG=`git describe --tags --exact-match 2>/dev/null || true`
          docker run --rm -v ${PWD}:/home/pyplasm -w /home/pyplasm \
            -e PYTHON_VERSION=${PYTHON_VERSION}  \
            -e PYPI_USERNAME=${PYPI_USERNAME} -e PYPI_TOKEN=${PYPI_TOKEN} \
            -e GIT_TAG=${GIT_TAG} \
            visus/portable-linux-binaries_x86_64:4.1 bash ./resources/scripts/cpython.ubuntu.sh

  # //////////////////////////////////////////////////////////////////////////
  # conda
  # see https://docs.conda.io/en/latest/miniconda.html )

  conda-windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false  
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
    - name: git clone pyplasm
      uses: actions/checkout@v2     
    - name: Compile (cpython)
      shell: bash
      run: |
           set -ex
           export PYTHON_VERSION=${{ matrix.python-version }}
           export GIT_TAG=`git describe --tags --exact-match 2>/dev/null || true`
           source ./resources/conda.windows.sh

  # this will compile only for x86_64 since github actions does not have APPLE ARM64 architecture
  # so you will need to produce conda ARM64 for apple manually by doing:
  #   export ANACONDA_TOKEN=<your-value-here>
  #   export GIT_TAG=<your-value-here>  
  #   export PYTHON_VERSION=3.8 | 3.9 | 3.10 | 3.11
  #   ./resources/scripts/conda.macos.sh
  conda-macos:
    runs-on: macos-11
    strategy:
      fail-fast: false  
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
    - name: git clone pyplasm
      uses: actions/checkout@v2
    - name: Compile (cpython)
      shell: bash
      run: |
           set -ex
           export PYTHON_VERSION=${{ matrix.python-version }}
           export GIT_TAG=`git describe --tags --exact-match 2>/dev/null || true`
           source ./resources/scripts/conda.macos.sh
                  
  conda-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
    - name: git clone pyplasm
      uses: actions/checkout@v2
    - name: Compile cpython
      shell: bash
      run: |
          set -ex    
          export PYTHON_VERSION=${{ matrix.python-version }}
          export GIT_TAG=`git describe --tags --exact-match 2>/dev/null || true`
          docker run --rm -v ${PWD}:/home/pyplasm -w /home/pyplasm \
            -e PYTHON_VERSION=${PYTHON_VERSION} \
            -e ANACONDA_TOKEN=${ANACONDA_TOKEN} \
            -e GIT_TAG=${GIT_TAG} \
            visus/portable-linux-binaries_x86_64:4.1 bash ./resources/scripts/conda.ubuntu.sh






